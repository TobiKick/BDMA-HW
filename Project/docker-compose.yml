version: "3"
networks:
  kafka-network:
    driver: "bridge"

services:
#  namenode:
#    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.2-java8
#    container_name: namenode
#    ports:
#      - 9870:9870
#      - 9000:9000
#    volumes:
#      - hadoop_namenode:/hadoop/dfs/name
#    environment:
#      - CLUSTER_NAME=test
#    env_file:
#      - hadoop/hadoop.env
#
#  datanode:
#    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.2-java8
#    container_name: datanode
#    volumes:
#      - hadoop_datanode:/hadoop/dfs/data
#    environment:
#      SERVICE_PRECONDITION: "namenode:9870"
#    env_file:
#      - hadoop/hadoop.env
#
#  spark-master:
#    image: purbanow/spark-master:latest
#    container_name: spark-master
#    ports:
#      - 8089:8080
#      - 7077:7077
#    env_file:
#      - hadoop/hadoop.env
#
#  spark-worker-1:
#    image: purbanow/spark-worker:latest
#    container_name: spark-worker-1
#    depends_on:
#      - spark-master
#    ports:
#      - 8084:8081
#    environment:
#      - "SPARK_MASTER=spark://spark-master:7077"
#    env_file:
#      - hadoop/hadoop.env
#
#  spark-worker-2:
#    image: purbanow/spark-worker:latest
#    container_name: spark-worker-2
#    depends_on:
#      - spark-master
#    ports:
#      - 8085:8081
#    environment:
#      - SPARK_MASTER=spark://spark-master:7077
#    env_file:
#      - hadoop/hadoop.env

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.50.187 # ifconfig | grep 'inet 192'| awk '{ print $2}'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MAX_REQUEST_SIZE: 2000000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network

volumes:
  hadoop_namenode:
  hadoop_datanode:

