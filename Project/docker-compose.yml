version: "3.5"
networks:
  kafka-network:
    driver: "bridge"

services:
#  spark-master:
#    image: bde2020/spark-master:2.4.4-hadoop2.7
#    container_name: spark-master
#    ports:
#      - "8084:8080"
#      - "7077:7077"
#  spark-worker-1:
#    image: bde2020/spark-worker:2.4.4-hadoop2.7
#    container_name: spark-worker-1
#    depends_on:
#      - spark-master
#    ports:
#      - "8085:8081"
#    environment:
#      - "SPARK_MASTER=spark://spark-master:7077"
#  spark-worker-2:
#    image: bde2020/spark-worker:2.4.4-hadoop2.7
#    container_name: spark-worker-2
#    depends_on:
#      - spark-master
#    ports:
#      - "8086:8081"
#    environment:
#      - "SPARK_MASTER=spark://spark-master:7077"
#
#

#  namenode:
#    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.2-java8
#    container_name: namenode
#    ports:
#      - 9870:9870
#      - 9000:9000
#    volumes:
#      - hadoop_namenode:/hadoop/dfs/name
#    environment:
#      - CLUSTER_NAME=test
#    env_file:
#      - hadoop.env
#
#  datanode:
#    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.2-java8
#    container_name: datanode
#    volumes:
#      - hadoop_datanode:/hadoop/dfs/data
#    environment:
#      SERVICE_PRECONDITION: "namenode:9870"
#    env_file:
#      - hadoop.env

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.50.187 # ifconfig | grep 'inet 192'| awk '{ print $2}'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "new_txs:1:1,fraud_txs:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network

  model-service:
    image: model-service
    container_name: model-service
    ports:
      - "5000:5000"
    networks:
      - kafka-network

  kafka-stream-predictor:
    image: kafka-stream-predictor
    container_name: kafka-stream-predictor
    depends_on:
      - kafka
    networks:
      - kafka-network

#  tx-generator:
#    image: tx-generator
#    container_name: tx-generator
#    depends_on:
#      - kafka
#    networks:
#      - kafka-network

#  spark-app:
#    image: spark-app
#    container_name: spark-app
#    depends_on:
#      - kafka
#    networks:
#      - kafka-network

volumes:
  hadoop_namenode:
  hadoop_datanode: